"use strict";(self.webpackChunkreact_storybook_library_v3=self.webpackChunkreact_storybook_library_v3||[]).push([[544],{"./src/stories/Dropdown.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Dropdown_stories});var react=__webpack_require__("./node_modules/react/index.js"),fa=__webpack_require__("./node_modules/react-icons/fa/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Dropdown_Dropdown=_ref=>{let{options,defaultLabel}=_ref;const[isOpen,setIsOpen]=(0,react.useState)(!1),[selectedOption,setSelectedOption]=(0,react.useState)(defaultLabel),handleOptionClick=option=>{setSelectedOption(option),setIsOpen(!1)};return(0,jsx_runtime.jsxs)("div",{className:"dropdown",children:[(0,jsx_runtime.jsxs)("button",{className:"dropdown-toggle ".concat(isOpen?"open":""),onClick:()=>{setIsOpen(!isOpen)},"aria-haspopup":"listbox","aria-expanded":isOpen,"aria-label":selectedOption,children:[selectedOption,(0,jsx_runtime.jsx)(fa.Vr3,{className:"chevron-icon"})]}),isOpen&&(0,jsx_runtime.jsx)("div",{className:"options-container",children:(0,jsx_runtime.jsx)("ul",{className:"dropdown-menu",role:"listbox",children:options.map(((option,index)=>(0,jsx_runtime.jsx)("li",{className:"dropdown-option",role:"option",tabIndex:"0","aria-selected":selectedOption===option,onClick:()=>handleOptionClick(option),onKeyPress:e=>{"Enter"!==e.key&&" "!==e.key||handleOptionClick(option)},children:option},index)))})})]})},components_Dropdown=Dropdown_Dropdown;Dropdown_Dropdown.__docgenInfo={description:"",methods:[],displayName:"Dropdown",props:{options:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!0},defaultLabel:{description:"",type:{name:"string"},required:!0}}};const Dropdown_stories={title:"Components/Dropdown",component:components_Dropdown,argTypes:{options:{control:"array"},defaultLabel:{control:"text"},count:{control:"number"}}},Default=(args=>{const{count,options,defaultLabel}=args,dropdowns=Array.from({length:count},((_,i)=>(0,jsx_runtime.jsx)(components_Dropdown,{options,defaultLabel},i)));return(0,jsx_runtime.jsx)("div",{className:"dropdown-container",children:dropdowns})}).bind({});Default.args={options:["Option 1","Option 2","Option 3"],defaultLabel:"Select an option",count:1};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const {\n    count,\n    options,\n    defaultLabel\n  } = args;\n  const dropdowns = Array.from({\n    length: count\n  }, (_, i) => <Dropdown key={i} options={options} defaultLabel={defaultLabel} />);\n  return <div className="dropdown-container">{dropdowns}</div>;\n}',...Default.parameters?.docs?.source}}}}}]);